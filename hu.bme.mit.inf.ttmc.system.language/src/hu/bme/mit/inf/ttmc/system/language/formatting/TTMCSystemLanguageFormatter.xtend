/*
 * generated by Xtext
 */
package hu.bme.mit.inf.ttmc.system.language.formatting

import com.google.inject.Inject
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter
import org.eclipse.xtext.formatting.impl.FormattingConfig
import hu.bme.mit.inf.ttmc.system.language.services.TTMCSystemLanguageGrammarAccess

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
public class TTMCSystemLanguageFormatter extends AbstractDeclarativeFormatter {
	
	@Inject extension TTMCSystemLanguageGrammarAccess
	
	override protected configureFormatting(FormattingConfig c) {
		
		for(pair: findKeywordPairs('(', ')')) {
			c.setNoSpace().after(pair.first);
			c.setNoSpace().before(pair.second);
		}
		
		for(keyword: findKeywords(',')) {
			c.setNoLinewrap().before(keyword)
			c.setNoSpace().before(keyword)
		}
		
		for(keyword: findKeywords('.')) {
			c.setNoSpace().around(keyword)
		}
		
		for(keyword: findKeywords('::')) {
			c.setNoSpace().after(keyword)
		}
		
		for(keyword: findKeywords("'")) {
			c.setNoSpace().before(keyword)
		}
		
		for(keyword: findKeywords(";")) {
			c.setNoSpace().before(keyword)
		}
		
		for(keyword: findKeywords('!')) {
			c.setNoSpace().around(keyword)
		}
		
		c.setLinewrap(0, 1, 2).before(SL_COMMENTRule)
		c.setLinewrap(0, 1, 2).before(ML_COMMENTRule)
		c.setLinewrap(0, 1, 1).after(ML_COMMENTRule)
		
		////
		
		c.setLinewrap.after(systemSpecificationAccess.leftCurlyBracketKeyword_3)
		c.setLinewrap.before(systemSpecificationAccess.rightCurlyBracketKeyword_5)
		c.setIndentationIncrement.after(systemSpecificationAccess.leftCurlyBracketKeyword_3)
		c.setIndentationDecrement.before(systemSpecificationAccess.rightCurlyBracketKeyword_5)
		
		c.setLinewrap.after(typeDeclarationRule)
		c.setLinewrap.after(constantDeclarationRule)
		c.setLinewrap.after(constraintSpecificationRule)
		
		c.setLinewrap(2).before(systemDeclarationRule)
		c.setLinewrap.after(systemDeclarationRule)
		
		c.setLinewrap(2).before(propertyDeclarationRule)
		c.setLinewrap.after(propertyDeclarationRule)
		
		////
		
		c.setLinewrap.after(systemDefinitionAccess.leftCurlyBracketKeyword_1)
		c.setLinewrap.before(systemDefinitionAccess.rightCurlyBracketKeyword_3)
		c.setIndentationIncrement.after(systemDefinitionAccess.leftCurlyBracketKeyword_1)
		c.setIndentationDecrement.before(systemDefinitionAccess.rightCurlyBracketKeyword_3)
		
		c.setLinewrap.after(variableDeclarationRule)
		c.setLinewrap.after(systemConstraintDefinitionRule)
	}
}
